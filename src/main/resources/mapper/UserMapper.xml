<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--上面2行的是约束依赖，固定照抄就好-->
<!--下面的才是要自己编写的地方-->
<!--写mapper的配置文件第一步就是要写<mapper></mapper>标签-->
<!--<mapper></mapper>标签里包含着各个CURD操作的SQL语句-->
<mapper namespace="com.example.sql_demo.mapper.UserMapper">
    <!--定义一个名为BaseResultMap的返回类型-->
    <resultMap id="BaseResultMap" type="com.example.sql_demo.entity.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
    </resultMap>

    <!--插入语句-->
    <!--id要与UserMapper文件中表示插入的函数名一致，parameterType表示函数的输入参数的类型-->
    <insert id="insertUser" parameterType="com.example.sql_demo.entity.User">
        insert into texttable(id,name,age)values(#{id,jdbcType=INTEGER},#{name,jdbcType=VARCHAR},#{age,jdbcType=INTEGER})/*SQL语句*/
    </insert>

    <!--删除语句-->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from texttable where id =#{id,jdbcType=INTEGER}
    </delete>

    <!--查找语句-->
    <!--resultMap表示函数返回的类型-->
    <select id="selectUser" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select * from texttable where id = #{id,jdbcType=INTEGER}
    </select>

    <!--查找语句-->
    <select id="selectAll" resultMap="BaseResultMap">
        select * from texttable
    </select>

    <!--修改语句-->
    <update id="updateUser" parameterType="com.example.sql_demo.entity.User">
        update texttable set name=#{name,jdbcType=VARCHAR},age=#{age,jdbcType=INTEGER} where id=#{id,jdbcType=INTEGER}
    </update>
</mapper>